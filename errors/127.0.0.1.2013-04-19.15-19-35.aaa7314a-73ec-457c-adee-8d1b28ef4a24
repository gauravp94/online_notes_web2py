(dp1
S'output'
p2
S"<type 'exceptions.Exception'> Server address not specified"
p3
sS'layer'
p4
S'/home/samfisher/iiith/Semester 2/web2py/applications/asd/controllers/default.py'
p5
sS'code'
p6
S'#text editor(if possible)\nimport datetime\nimport os\nimport re\n# -*- coding: utf-8 -*-\nimport time\n# this file is released under public domain and you can use without limitations\n########################################################################\n#\t\t\t\t\t\t\t\t       #\n#\t    \t\t****Gaurav Parida*******\t\t       #\n#\t\t\t****Aniruddh Kanojia****\t\t       #\n#\t\t\t\t\t\t\t\t       #\n########################################################################\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\n\nimport gluon.contrib.simplejson\n@auth.requires_login()\ndef index():\n    """\n    example action using the internationalization operator t and flash\n    rendered by views/default/index.html or views/generic.html\n\n    if you need a simple wiki simple replace the two lines below with:\n    return auth.wiki()\n    """\n    a=db(db.auth_user.id==auth.user.id).select()\n    b=a[0][\'notes\']\n    a=b.split(\'@\')\n    d=[]\n    for i in range(len(a)):\n   \t c=db((db.note.authoris==auth.user.email)&(db.note.title==a[i])).select()\n   \t if len(c):\n\t\t    d.append(c[0])\n\n    d=sorted(d,key=lambda x: x[\'title\'] )\n    e=d\n    p=0\n    q=0\n    r=0\n    q1=[]\n    r1=[]\n    c=db(db.task.authoris==auth.user.email).select()\n    d=db(db.friends.tom==auth.user.email).select()\n    for i in range(0,len(c)):\n\t    if c[i][\'done\']:\n\t    \tp=1\n\t    else:\n\t    \tif(c[i][\'pending\'].date()>=datetime.date.today()):\n\t    \t\tq=1\n\t\t\tq1.append(c[i])\n\t    \telse:\n\t    \t\tr=1\n\t\t\tr1.append(c[i])\n    q1=sorted(q1,key=lambda x: x[\'tit\'] )\n    r1=sorted(r1,key=lambda x: x[\'tit\'] )\n    response.flash ="Welcome to Notes!"\n    return dict(d=d,b=b,a=e,c=c,p=p,q=q,r=r,q1=q1,r1=r1)\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/ushowidoprofile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n@auth.requires_login()\ndef create():\n\tresponse.flash=\'Create Your Notes Here !\'\n\tif session.msg==\'NO\':\n\t\tresponse.flash=\'Invalid Title!\'\n\t\tsession.msg=\'Yes\'\n\tif session.msg==\'E\':\n\t\tresponse.flash=\'Please Choose a priority\'\n\t\tsession.msg=\'Yes\'\n\tform=SQLFORM.factory(\n\t\tField(\'title\',\'string\',label=\'Title\'),\n\t\tField(\'description\',\'string\',label="Short description",requires=IS_NOT_EMPTY()),\n\t\tField(\'val\',\'text\',label=\'Note\',requires=IS_NOT_EMPTY()),\n\t\tField(\'tags\',\'string\',label="Tags"),\n\t\tField(\'priority\',requires=IS_IN_SET([\'Private\',\'Public\'])))\n\tif form.process().accepted:\n\t\ta=db(db.auth_user.id==auth.user.id).select()\n\t\tif form.vars.title in a[0][\'notes\'].split(\'@\'):\n\t\t\tsession.msg=\'NO\'\n\t\t\tredirect(URL(\'create\'))\n\t\tif form.vars.priority !=\'Private\' and form.vars.priority !=\'Public\':\n\t\t \tsession.msg=\'E\'\n\t\t \tredirect(URL(\'create\'))\n\t\tb=a[0][\'notes\']+\'@\'+form.vars.title\n\t\tc=form.vars.tags.split(\',\')\n\t\tdb(db.auth_user.id==auth.user.id).update(notes=b)\n\t\tsession.title=form.vars.title\n\t\tdb.note.insert(priority=form.vars.priority,title=form.vars.title,cd=request.now,md=request.now,description=form.vars.description,val=form.vars.val,tags=form.vars.tags,authoris=auth.user.email)\n\t\tfor i in range(len(c)):\t\n\t\t \tdb.tags.insert(word=c[i],title=form.vars.title,authoris=auth.user.email)\t\n\t\tredirect(URL(\'cr\'))\n\treturn dict(form=form)\n\n@auth.requires_login()\ndef cr():\n\tmessage=\'Want to add Attachments ?\'\n\treturn dict(message=message)\n\n@auth.requires_login()\ndef cratt():\n\tif session.msg==\'A\':\n\t\tresponse.flash=\'Change File Name\'\n\t\tsession.msg=\'Y\'\n\ttitle=session.title\n\tmessage=\'Hi\'\n\ta=db((db.att.title==title)&(db.att.usr==auth.user.email)).select()\n\tform=SQLFORM(db.att,deletable=True,upload=os.path.join(request.folder,\'/pic\'))\n\tif request.vars.fil!=None:\n\t\tform.vars.nm=request.vars.fil.filename\n\tif form.process().accepted:\n\t\ta=db((db.att.nm==form.vars.nm)&(db.att.usr==auth.user.email)&(db.att.title==session.title)).select()\n\t\tif len(a)>0:\n\t\t\tsession.msg=\'A\'\n\t\t\tredirect(URL(\'cratt\'))\n\t\tdb(db.att.fil==form.vars.fil).update(usr=auth.user.email,title=title,nm=form.vars.nm)\n\t\tredirect(URL(\'cratt\'))\n\treturn dict(a=a,form=form)\n@auth.requires_login()\ndef show():\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\tsession.title=title\n\ta=db((db.note.title==title)& (auth.user.email==db.note.authoris)).select()\n\ttit=a[0][\'title\']\n\tval=a[0][\'val\']\n\tdes=a[0][\'description\']\n\ttags=a[0][\'tags\']\n\tct=a[0][\'cd\']\n\tmt=a[0][\'md\']\n\tpr=a[0][\'priority\']\n\tem=a[0][\'authoris\']\n\tl=db((db.att.title==title)&(db.att.usr==auth.user.email)).select()\n\treturn dict(title=tit,val=val,des=des,tags=tags,ct=ct,mt=mt,a=a,l=l,pr=pr,em=em)\n@auth.requires_login()\ndef edit():\n\tif session.message==\'NOT\':\n\t\tresponse.flash=\'Invalid Username\'\n\t\tsession.message=\'Yes\'\n\ttitle=request.args(0,cast=str).replace(\'_\',\' \')\n\ttitle=title.replace(\'_\',\' \')\n\tc=db((db.note.title==title)&(db.note.authoris==auth.user.email)).select()\n\tform=SQLFORM.factory(\n\t\tField(\'title\',\'string\',label=\'Title\',default=c[0][\'title\']),\n\t\tField(\'description\',\'string\',label=\'Description\',default=c[0][\'description\']),\n\t\tField(\'val\',\'text\',label=\'Note\',default=c[0][\'val\'],requires=IS_NOT_EMPTY()),\n\t\tField(\'tags\',\'string\',label=\'Tags\',default=c[0][\'tags\']),\n\t\tField(\'priority\',requires=IS_IN_SET([\'Public\',\'Private\'])))\n\tif form.process().accepted:\n\t\tc=form.vars.tags.split(\',\')\n\t\ta=db(db.note.title==form.vars.title).select()\n\t\tif len(a)==1 and a[0][\'title\']!=title:\n\t\t\tsession.message=\'NOT\'\n\t\t\tredirect(URL(\'edit\',args=title))\n\t\tdb((db.tags.title==title)&(db.tags.authoris==auth.user.email)).delete()\n\t\tfor i in range(len(c)):\t\n\t\t \tdb.tags.insert(word=c[i],title=form.vars.title,authoris=auth.user.email)\t\n\t\t\n\t\tdb((db.note.title==title)&(auth.user.email==db.note.authoris)).update(title=form.vars.title,md=request.now,description=form.vars.description,val=form.vars.val,tags=form.vars.tags,priority=form.vars.priority)\n\t\ta=db(db.auth_user.id==auth.user.id).select()\n\t\ta=a[0][\'notes\']\n\t\tb=a.split(\'@\')\n\t\ta=\'\'\n\t\tfor i in range(1,len(b)):\n\t\t\tif b[i].strip()==title.strip():\n\t\t\t\tb[i]=form.vars.title\n\t\t\ta+=\'@\'+b[i]\n\t\tdb(db.auth_user.id==auth.user.id).update(notes=a)\n\t\tredirect(URL(\'show\',args=form.vars.title))\n\treturn dict(form=form)\n@auth.requires_login()\ndef edshow():\n    a=db(db.auth_user.id==auth.user.id).select()\n    b=a[0][\'notes\']\n    response.flash = "You can edit notes here!"\n    return dict(b=b,a=[])\n@auth.requires_login()\ndef eddel():\n    a=db(db.auth_user.id==auth.user.id).select()\n    b=a[0][\'notes\']\n    response.flash = "Are you sure ?"\n    return dict(b=b,a=[])\n@auth.requires_login()\ndef shdel():\n\ttitle=request.args(0,cast=str).replace(\'_\',\' \')\n\ttitle=title.replace(\'_\',\' \')\n\treturn dict(title=title)\n@auth.requires_login()\ndef delet():\n\ttitle=request.args(0,cast=str).replace(\'_\',\' \')\n\ttitle=title.replace(\'_\',\' \')\n\tdb((db.note.title==title)&(db.note.authoris==auth.user.email)).delete()\n\tdb((db.tags.title==title)&(db.tags.authoris==auth.user.email)).delete()\n\tdb((db.att.usr==auth.user.email)&(db.att.title==title)).delete()\n\ta=db(db.auth_user.id==auth.user.id).select()\n\ta=a[0][\'notes\']\n\tb=a.split(\'@\')\n\ta=\'\'\n\tfor i in range(1,len(b)):\n\t\tif b[i].strip()==title.strip():\n\t\t\tcontinue\n\t\ta+=\'@\'+b[i]\n\tdb(db.auth_user.id==auth.user.id).update(notes=a)\n\tredirect(URL(\'index\'))\n\treturn dict(form=form)\n@auth.requires_login()\ndef searchinp():\n\tform1=SQLFORM.factory(Field(\'stime\',\'date\',requires=IS_NOT_EMPTY(),label="Start Time"),\n\t\t\tField(\'endtime\',\'date\',label="End Time"),table_name="1000")\n\tform2=SQLFORM.factory(Field(\'Name\',\'string\',requires=IS_NOT_EMPTY()),table_name="2")\n\tform3=SQLFORM.factory(Field(\'Name\',\'string\',requires=IS_NOT_EMPTY()),table_name="3")\n\td=[\'Search By Title\',\'Search By Tags\',\'Search By Date\']\n\ta=[form2,form3,form1]  \n\tif form1.accepts(request.vars,session):\n\t\tst=form1.vars.stime\n\t\tet=form1.vars.endtime\n\t\tif et!=None:\n\t\t\tredirect(URL(\'sdate2\',args=(form1.vars.stime,form1.vars.endtime)))\n\t\telse:\n\t\t\tredirect(URL(\'sdate\',args=(form1.vars.stime)))\n\tif form2.accepts(request.vars,session):\n\t\tredirect(URL(\'searchtit\',args=form2.vars.Name))\n\tif form3.accepts(request.vars,session):\n\t\tredirect(URL(\'searchtag\',args=form3.vars.Name))\n\treturn dict(a=a,d=d,form2=form2)\n@auth.requires_login()\ndef searchtag():\n\ta=request.args(0,cast=str).replace(\'_\',\' \')\n\ta=a.replace(\'_\',\' \')\n        nam=[]\n\ttit=[]\n        name=db(db.tags.id>0).select(db.tags.ALL)\n\tl=len(name)\n\tfor i in range(len(name)):\n\t\tmat=re.search(a,name[i][\'word\'])\n\t\tif mat and name[i][\'authoris\']==auth.user.email:\n\t\t\tnam.append(name[i])\n\treturn dict(nam=nam)\n@auth.requires_login()\ndef litetag():\n\ttagname=[]\n\tnotest=[]\n\ta=db(auth.user.email==db.tags.authoris).select(db.tags.ALL)\n\tfor i in range(len(a)):#if len(a) is zero then tell that there is no tags attached\n\t\tif a[i][\'word\'] not in tagname:\n\t\t\ttagname.append(a[i][\'word\'])\n\t\t\ttmp=[];\n\t\t\tfor j in range(len(a)):\n\t\t\t\tif a[i][\'word\']==a[j][\'word\']:\n\t\t\t\t\ttmp.append(a[j][\'title\'])\n\t\t\tnotest.append(tmp)\n\treturn dict(tagname=tagname,notest=notest)\n\n@auth.requires_login()\ndef searchtit():\n\ta=request.args(0,cast=str).replace(\'_\',\' \')\n\ta=a.replace(\'_\',\' \')\n        nam=[]\n        name=db(db.note.title>0).select(db.note.ALL)\n\tl=len(name)\n\tfor i in range(0,l):\n\t\tmat=re.search(a,name[i][\'title\'])\n\t\tif mat and name[i][\'authoris\']==auth.user.email:\n\t\t\tnam.append(name[i])\n\treturn dict(nam=nam)\n@auth.requires_login()\ndef crtask():\n\ta={}\n\tresponse.flash=\'Create Tasks Here\'\n\tif session.msg==\'N\':\n\t\tresponse.flash=\'Invalid Title\'\n\t\tsession.msg=\'Y\'\n\telif session.msg==\'T\':\n\t\tresponse.flash=\'Invalid Date\'\n\t\tsession.msg=\'Y\'\n\tform=SQLFORM.factory(\n\t\t\tField(\'title\',\'string\',label=\'Title\',requires=IS_NOT_EMPTY()),\n\t\t\tField(\'des\',\'text\',label=\'Description\'),\n\t\t\tField(\'pen\',\'date\',label=\'Date\'))\n\tif form.process().accepted:\n\t\ta=db((db.task.tit==form.vars.title)&(auth.user.email==db.task.authoris)).select()\n\t\tif len(a)>0:\n\t\t\tsession.msg=\'N\'\n\t\t\tredirect(URL(\'crtask\'))\n\t\tif form.vars.pen<datetime.date.today():\n\t\t\tsession.msg=\'T\'\n\t\t\tredirect(URL(\'crtask\'))\n\t\tdb.task.insert(tit=form.vars.title,description=form.vars.des,pending=form.vars.pen,done=False,authoris=auth.user.email)\n#\t\tInserting For scheduler\n\t\ta={}\n\t\ta=[auth.user.email,form.vars.title]\n\t\tdb.scheduler_task.insert(\n\t\tapplication_name=\'asd/appadmin\',\n\t\ttask_name=form.vars.title+\'+\'+auth.user.email,\n\t\tgroup_name=\'main\',\n\t\tstart_time=form.vars.pen+datetime.timedelta(-1),\n\t\tstop_time=form.vars.pen,\n\t\tstatus=\'QUEUED\',\n\t\tfunction_name=\'f\',\n\t\tenabled=True,\n\t\tperiod=60,\n\t\targs=gluon.contrib.simplejson.dumps(a))\n\n\t\tredirect(URL(\'index\'))\n\treturn dict(form=form,a=a)\n@auth.requires_login()\ndef shtask():\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\ta=db((db.task.tit==title)& (auth.user.email==db.task.authoris)).select()\n\ttit=a[0][\'tit\']\n\tdes=a[0][\'description\']\n\treturn dict(title=tit,description=des,a=a,pending=a[0][\'pending\'])\n@auth.requires_login()\ndef taskde():\n\tresponse.flash=\'Are You Sure ??\'\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\treturn dict(title=title)\n@auth.requires_login()\ndef taskde1():\n\tresponse.flash=\'Are You Sure ??\'\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\treturn dict(title=title)\n\n@auth.requires_login()\ndef taskdel():\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\tdb((db.task.tit==title)&(db.task.authoris==auth.user.email)).delete()\n\tdb(db.scheduler_task.task_name==title+\'+\'+auth.user.email).delete()\n\tmessage=\'Done\'\n\tredirect(URL(\'index\'))\n\treturn (message)\n@auth.requires_login()\ndef taskdel1():\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\tdb((db.task.tit==title)&(db.task.authoris==auth.user.email)).delete()\n\tdb(db.scheduler_task.task_name==title+\'+\'+auth.user.email).delete()\n\tmessage=\'Done\'\n\tredirect(URL(\'taskshdel\'))\n\treturn (message)\n\n@auth.requires_login()\ndef taskshdel():\n\ta=db(db.task.authoris==auth.user.email).select()\n\treturn dict(a=a)\n\ndef help():\n\tresponse.flash=\'Hi\'\n\tmessage=\'In case of doubts contact the developers\'\n\treturn dict(message=message)\n@auth.requires_login()\ndef taskedit():\n\tif session.message==\'NOT\':\n\t\tresponse.flash=\'Invalid Username\'\n\t\tsession.message=\'Yes\'\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\tc=db(db.task.tit==title).select()\n\tform=SQLFORM.factory(\n\t\tField(\'title\',\'string\',label=\'Title\',default=c[0][\'tit\']),\n\t\tField(\'description\',\'text\',label=\'Description\',default=c[0][\'description\'],length=255),\n\t\tField(\'time\',\'date\',default=c[0][\'pending\']),\n\t\tField(\'done\',\'boolean\',default=c[0][\'done\']))\n\tif form.process().accepted:\n\t\ta=db(db.task.tit==form.vars.title).select()\n\t\tif len(a)==1 and a[0][\'tit\']!=title:\n\t\t\tsession.message=\'NOT\'\n\t\t\tredirect(URL(\'taskedit\',args=title))\n\t\tdb((db.task.tit==title)&(auth.user.email==db.task.authoris)).update(tit=form.vars.title,description=form.vars.description,pending=form.vars.time,done=form.vars.done)\n\t\t\n\t\tdb(db.scheduler_task.task_name==title+\'+\'+auth.user.email).delete()\n\t\tif(form.vars.done==False):\n\t\t\ta={}\n\t\t\ta=[auth.user.email,form.vars.title]\n\t\t\tdb.scheduler_task.insert(\n\t\t\tapplication_name=\'asd/appadmin\',\n\t\t\ttask_name=form.vars.title+\'+\'+auth.user.email,\n\t\t\tgroup_name=\'main\',\n\t\t\tstart_time=form.vars.time+datetime.timedelta(-1),\n\t\t\tstop_time=form.vars.pen,\n\t\t\tstatus=\'QUEUED\',\n\t\t\tfunction_name=\'f\',\n\t\t\tenabled=True,\n\t\t\tperiod=60,\n\t\t\targs=gluon.contrib.simplejson.dumps(a))\n\n\n\t\tredirect(URL(\'shtask\',args=form.vars.title))\n\treturn dict(form=form,title=title)\n@auth.requires_login()\ndef taskedit1():\n\tif session.message==\'NOT\':\n\t\tresponse.flash=\'Invalid Username\'\n\t\tsession.message=\'Yes\'\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\tc=db(db.task.tit==title).select()\n\tform=SQLFORM.factory(\n\t\tField(\'title\',\'string\',label=\'Title\',default=c[0][\'tit\']),\n\t\tField(\'description\',\'string\',label=\'Description\',default=c[0][\'description\']),\n\t\tField(\'time\',\'date\',default=c[0][\'pending\']),\n\t\tField(\'done\',\'boolean\',default=c[0][\'done\']))\n\tif form.process().accepted:\n\t\ta=db(db.task.tit==form.vars.title).select()\n\t\tif len(a)==1 and a[0][\'tit\']!=title:\n\t\t\tsession.message=\'NOT\'\n\t\t\tredirect(URL(\'taskedit\',args=title))\n\t\tdb((db.task.tit==title)&(auth.user.email==db.task.authoris)).update(tit=form.vars.title,description=form.vars.description,pending=form.vars.time,done=form.vars.done)\n\t\t\n\t\tdb(db.scheduler_task.task_name==title+\'+\'+auth.user.email).delete()\n\t\tif(form.vars.done==False):\n\t\t\ta={}\n\t\t\ta=[auth.user.email,form.vars.title]\n\t\t\tdb.scheduler_task.insert(\n\t\t\tapplication_name=\'asd/appadmin\',\n\t\t\ttask_name=form.vars.title+\'+\'+auth.user.email,\n\t\t\tgroup_name=\'main\',\n\t\t\tstart_time=form.vars.time+datetime.timedelta(-1),\n\t\t\tstop_time=form.vars.pen,\n\t\t\tstatus=\'QUEUED\',\n\t\t\tfunction_name=\'f\',\n\t\t\tenabled=True,\n\t\t\tperiod=60,\n\t\t\targs=gluon.contrib.simplejson.dumps(a))\n\n\n\t\tredirect(URL(\'taskedshow\',args=form.vars.title))\n\treturn dict(form=form,title=title)\n@auth.requires_login()\ndef taskedshow():\n    a=db(db.task.authoris==auth.user.email).select()\n    response.flash = "You can edit tasks here!"\n    return dict(a=a)\n@auth.requires_login()\ndef asearchtit():\n\tform=SQLFORM.factory(Field(\'Name\',\'string\',requires=IS_NOT_EMPTY()))\n\tif form.process().accepted:\n\t\tredirect(URL(\'searchtit\',args=form.vars.Name))\n\treturn dict(form=form)\n@auth.requires_login()\ndef asearchtag():\n\tform=SQLFORM.factory(Field(\'Name\',\'string\',requires=IS_NOT_EMPTY()))\n\tif form.process().accepted:\n\t\tredirect(URL(\'searchtag\',args=form.vars.Name))\n\treturn dict(form=form)\n\n@auth.requires_login()\ndef today():\n\tform=SQLFORM.factory(Field(\'Between\',\'date\'))\n\ta=db(db.task.authoris==auth.user.email).select()\n\tb=[]\n\tc=datetime.date.today()\n\tx=\'No\'\n\tfor i in range(0,len(a)):\n\t\tif a[i][\'pending\'].date()==c:\n\t\t\tb.append(a[i])\n\t\t\tx=\'Yes\'\n\treturn dict(x=x,b=b)\n@auth.requires_login()\ndef attdel():\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\tdb(db.att.fil==title).delete()\n\tredirect(URL(\'cratt\'))\n\treturn()\n@auth.requires_login()\ndef attdel1():\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\tdb(db.att.fil==title).delete()\n\tredirect(URL(\'show\',args=session.title))\n\treturn()\n@auth.requires_login()\ndef asearchdate():\n\tform=SQLFORM.factory(Field(\'stime\',\'date\',requires=IS_NOT_EMPTY(),label="Start Time"),\n\t\t\tField(\'endtime\',\'date\',label="End Time"))\n\tif form.process().accepted:\n\t\tst=form.vars.stime\n\t\tet=form.vars.endtime\n\t\tif et!=None:\n\t\t\tredirect(URL(\'sdate2\',args=(form.vars.stime,form.vars.endtime)))\n\t\telse:\n\t\t\tredirect(URL(\'sdate\',args=(form.vars.stime)))\n\treturn dict(form=form)\n@auth.requires_login()\ndef sdate2():\n\ta=request.args(0,cast=str)\n\tb=request.args(1,cast=str)\n\tnam=[]\n\tnam2=[]\n\td=[]\n\tname=db(db.note.authoris==auth.user.email).select()\n\tl=len(name)\n\tfor i in range(l):\n\t\tif str(name[i][\'cd\'].date())>=a and str(name[i][\'cd\'].date())<=b:\n\t\t\tnam.append(name[i])\n\t\tif str(name[i][\'md\'].date())>=a and str(name[i][\'md\'].date())<=b:\n\t\t\tnam2.append(name[i])\n\treturn dict(nam=nam,nam2=nam2,a=a,b=b)\n\n@auth.requires_login()\ndef sdate():\n\ta=request.args(0,cast=str)\n\tnam=[]\n\tnam2=[]\n\td=[]\n\tname=db(db.note.authoris==auth.user.email).select()\n\tl=len(name)\n\tfor i in range(l):\n\t\tif str(name[i][\'cd\'].date())==a:\n\t\t\tnam.append(name[i])\n\t\tif str(name[i][\'md\'].date())==a:\n\t\t\tnam2.append(name[i])\n\treturn dict(nam=nam,nam2=nam2,a=a)\n@auth.requires_login()\ndef ma():\n\ttitl=request.args(0,cast=str).strip()\n\ttitl=titl.replace(\'_\',\' \')\n\ta=db((db.note.authoris==auth.user.email)&(db.note.title==titl)).select()\n\tmail.send(to=auth.user.email,subject=titl,message=\'Description : \'+str(a[0][\'description\'])+\'\\r\\n\'+\'Content : \'+str(a[0][\'val\'])+\'\\r\\n\'+\'Creation Date : \'+str(a[0][\'cd\'].date())+\'\\r\\n\'+\'Modification Date : \'+str(a[0][\'md\'].date())+\'\\r\\n\'+\'Author Is : \'+str(auth.user.email))\n\tredirect(URL(\'show\',args=titl))\n\treturn dict()\ndef aaa():\n\ta={}\n\ta=[\'aniruddh.kanojia@students.iiit.ac.in\']\n\tdb.scheduler_task.insert(\n\t\t\tapplication_name=\'notes/appadmin\',\n\t\t\ttask_name=\'Task 1\',\n\t\t\tgroup_name=\'main\',\n\t\t\tstatus=\'QUEUED\',\n\t\t\tfunction_name=\'f\',\n\t\t\tenabled=True,\n\t\t\tperiod=60,\n\t\t\tstart_time=request.now,\n\t\t\targs=gluon.contrib.simplejson.dumps(a))\n@auth.requires_login()\ndef do_down(filename,content):\n\tresponse.headers[\'Content-Disposition\']=\'attachment;filename=\'+filename\n\tresponse.headers[\'Content-Type\']=\'txt/csv\'\n\treturn content.getvalue()\n@auth.requires_login()\ndef crnote():\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\ta=db((db.note.title==title)&(db.note.authoris==auth.user.email)).select()\n\timport cStringIO\n\tcontent=cStringIO.StringIO()\n\tcontent.write(\'Title : \'+str(title)+\'\\r\\n\'+\'Description :\'+str(a[0][\'description\'])+\'\\r\\n\\n\'+str(a[0][\'val\'])+\'\\r\\n\')\n\tfilename=str(request.args(0)+\'+\'+auth.user.email)\n\treturn do_down(filename,content)\n@auth.requires_login()\ndef crnote2():\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\tti=request.args(1,cast=str).strip()\n\tti=ti.replace(\'_\',\' \')\n\ta=db((db.note.title==title)&(db.note.authoris==ti)).select()\n\timport cStringIO\n\tcontent=cStringIO.StringIO()\n\tcontent.write(\'Title : \'+str(title)+\'\\r\\n\'+\'Description :\'+str(a[0][\'description\'])+\'\\r\\n\\n\'+str(a[0][\'val\'])+\'\\r\\n\')\n\tfilename=str(request.args(0)+\'+\'+auth.user.email)\n\treturn do_down(filename,content)\n@auth.requires_login()\ndef sfriends():#searching for friends\n\tform=SQLFORM.factory(Field(\'name\',\'string\',label="Name of friend",requires=IS_NOT_EMPTY()))\n\tif form.process().accepted:\n\t\tredirect(URL(\'friendsearch\',args=form.vars.name))\n\treturn dict(form=form)\n@auth.requires_login()\ndef friendsearch():#takes the input from the other function sfriends\n\tinpname=request.args(0,cast=str).replace(\'_\',\' \')\n\tfin=[]\n\tp=[]\n\tq=[]\n\ta=db(db.auth_user.id>0).select()\n\ts=db((db.friends.frm==auth.user.email)|(db.friends.tom==auth.user.email)).select()\n\tfor i in range(len(a)):\n\t\tmat=re.search(inpname,a[i][\'first_name\'])\n\t\tif mat and a[i][\'email\']!=auth.user.email and a[i][\'email\']:\n\t\t\tfin.append(a[i])\n\t\t\tx=db((db.fr.fr1==auth.user.email)&(db.fr.fr2==a[i][\'email\'])).select()\n\t\t\tif len(x)>0:\n\t\t\t\tp.append(1)\n\t\t\telse:\n\t\t\t\tp.append(0)\n\t\t\ty=db((db.fr.fr2==auth.user.email)&(db.fr.fr1==a[i][\'email\'])).select()\n\t\t\tif len(y)>0:\n\t\t\t\tq.append(1)\n\t\t\telse:\n\t\t\t\tq.append(0)\n\t\n\n\treturn dict(fin=fin,em=session.email,a=p,b=q,s=s)\n\n@auth.requires_login()\ndef prof():\n\ta=request.args(0,cast=str).replace(\'_\',\' \')\n\tb=request.args(1,cast=str).replace(\'_\',\' \')\n\tc=db(db.note.authoris==b).select()\n\tfin=[]\n\tfor i in range(len(c)):\n\t\tfin.append(c[i])\n\treturn dict(a=a,b=b,c=c,fin=fin)\n@auth.requires_login()\ndef friendshow():\n\ta=request.args(0,cast=int)\n\ta=db((db.note.id==a)).select()\n\ttit=a[0][\'title\']\n\tval=a[0][\'val\']\n\tdes=a[0][\'description\']\n\ttags=a[0][\'tags\']\n\tct=a[0][\'cd\']\n\tmt=a[0][\'md\']\n\tpri=a[0][\'priority\']\n\tl=db((db.att.title==tit)&(db.att.usr==a[0][\'authoris\'])).select()\n\tsession.title=tit\n\treturn dict(title=tit,val=val,des=des,pr=pri,tags=tags,ct=ct,mt=mt,a=a,l=l)\n@auth.requires_login()\ndef reqsent():\n\ta=request.args(0,cast=str).replace(\'_\',\' \')\n\tb=db((db.friends.frm==a) &(db.friends.tom==auth.user.email)).select()\n\tif len(b)==0:\n\t\tdb.friends.insert(frm=auth.user.email,tom=a,vali=1)\n\t\tx=db(db.auth_user.email==a).select()\n\t\tdb(db.auth_user.email==a).update(Notifications=x[0][\'Notifications\']+1)\n\t\tmessage="You have sent a friend request to "+a\n\telse:\n\t\tmessage="You have already sent the friend request"\n\tresponse.flash="Friend Request Sent"\n\ttime.sleep(1)\n\tredirect(URL(\'sfriends\'))\n\treturn dict(message=message)\n@auth.requires_login()\ndef reqaccept():\n\ta=request.args(0).replace(\'_\',\' \')\n\tmessage=\'NO condition met\'\n\tc=request.args(1,cast=int)\n#\tdb((db.friends.frm==a) &(db.friends.tom==b)&(c==2)).update(vali=2)\n\tif(c==2):\n\t\tdb.fr.insert(fr1=auth.user.email,fr2=a)\n\t\tdb((db.friends.frm==a)&(db.friends.tom==auth.user.email)).delete()\n\t\tmessage="You have accepted the friend request"\n\telif(c==3):\n\t\tdb((db.friends.frm==a)&(db.friends.tom==auth.user.email)).delete()\n\t\tmessage="You have Rejected the friend request"\n\treturn dict(message=message,a=a,c=c)\n@auth.requires_login()\ndef myfr():\n\tif(session.msg==\'X\'):\n\t\tresponse.flash="Friend Deleted"\n\t\tsession.msg=\'Y\'\n\ta=db((db.fr.fr1==auth.user.email)).select()\n\tb=db(db.fr.fr2==auth.user.email).select()\n\tfina=[]\n\tfinb=[]\n\tfor i in range(len(a)):\n\t\tx=db(db.auth_user.email==a[i][\'fr2\']).select()\n\t\tif(len(x)):\n\t\t\tfina.append(x[0])\n\tfor i in range(len(b)):\n\t\tx=db(db.auth_user.email==b[i][\'fr1\']).select()\n\t\tif(len(x)):\n\t\t\tfinb.append(x[0])\n\treturn dict(fina=fina,finb=finb)\n@auth.requires_login()\ndef delask():\n\tresponse.flash=\'Are You Sure ??\'\n\ttitle=request.args(0,cast=str).strip()\n\ttitle=title.replace(\'_\',\' \')\n\treturn dict(title=title)\ndef delfr():\n\ta=request.args(0,cast=str).replace(\'_\',\' \')\n\tdb((db.fr.fr1==auth.user.email)&(db.fr.fr2==a)).delete()\n\tdb((db.fr.fr2==auth.user.email)&(db.fr.fr1==a)).delete()\n\tsession.msg=\'X\'\n\tredirect(URL(\'myfr\'))\n\treturn dict()\n@auth.requires_login()\ndef edit1():\n\tif session.message==\'NOT\':\n\t\tresponse.flash=\'Invalid Username\'\n\t\tsession.message=\'Yes\'\n\ttitle=request.args(0,cast=str).replace(\'_\',\' \')\n\ttitle=title.replace(\'_\',\' \')\n\tc=db((db.note.title==title)&(db.note.authoris==auth.user.email)).select()\n\tform=SQLFORM.factory(\n\t\tField(\'title\',\'string\',label=\'Title\',default=c[0][\'title\']),\n\t\tField(\'description\',\'string\',label=\'Description\',default=c[0][\'description\']),\n\t\tField(\'val\',\'text\',label=\'Note\',default=c[0][\'val\'],requires=IS_NOT_EMPTY()),\n\t\tField(\'tags\',\'string\',label=\'Tags\',default=c[0][\'tags\']))\n\tif form.process().accepted:\n\t\tc=form.vars.tags.split(\',\')\n\t\ta=db(db.note.title==form.vars.title).select()\n\t\tif len(a)==1 and a[0][\'title\']!=title:\n\t\t\tsession.message=\'NOT\'\n\t\t\tredirect(URL(\'edit\',args=title))\n\t\tdb((db.tags.title==title)&(db.tags.authoris==auth.user.email)).delete()\n\t\tfor i in range(len(c)):\t\n\t\t \tdb.tags.insert(word=c[i],title=form.vars.title,authoris=auth.user.email)\t\n\t\t\n\t\tdb((db.note.title==title)&(auth.user.email==db.note.authoris)).update(title=form.vars.title,md=request.now,description=form.vars.description,val=form.vars.val,tags=form.vars.tags)\n\t\ta=db(db.auth_user.id==auth.user.id).select()\n\t\ta=a[0][\'notes\']\n\t\tb=a.split(\'@\')\n\t\ta=\'\'\n\t\tfor i in range(1,len(b)):\n\t\t\tif b[i].strip()==title.strip():\n\t\t\t\tb[i]=form.vars.title\n\t\t\ta+=\'@\'+b[i]\n\t\tdb(db.auth_user.id==auth.user.id).update(notes=a)\n\t\tredirect(URL(\'edshow\',args=form.vars.title))\n\treturn dict(form=form)\n@auth.requires_login()\ndef nshow():\n    f=request.args(0,cast=int)\n    c=[]\n    d=[]\n    a=db(db.auth_user.id==auth.user.id).select()\n    b=a[0][\'notes\']\n    a=b.split(\'@\')\n    for i in range(len(a)):\n   \t c=db((db.note.authoris==auth.user.email)&(db.note.title==a[i])).select()\n   \t if len(c):\n\t\t    d.append(c[0])\n    if(f==1):\n    \td=sorted(d,key=lambda x: x[\'title\'] )\n    elif(f==2):\n    \td=sorted(d,key=lambda x: x[\'cd\'] ,reverse=True)\n    elif(f==3):\n    \td=sorted(d,key=lambda x: x[\'md\'] ,reverse=True)\n    response.flash ="Notes Listing !"\n    return dict(d=d,b=b,a=[])\n@auth.requires_login()\ndef searchtit1():\n\ta=request.vars.inp\n\ta=str(a)\n        nam=[]\n        name=db(db.note.title>0).select(db.note.ALL)\n\tl=len(name)\n\tfor i in range(0,l):\n\t\tmat=re.search(a,name[i][\'title\'])\n\t\tif mat and name[i][\'authoris\']==auth.user.email:\n\t\t\tnam.append(name[i])\n\treturn dict(nam=nam,a=a)\n@auth.requires_login()\ndef didtask():\n\ta=request.args(0,cast=str).replace(\'_\',\' \')\n\td=db((db.task.authoris==auth.user.email)&(db.task.tit==a)).update(done=True)\n\tredirect(URL(\'tshow\',args=1))\n\treturn()\n@auth.requires_login()\ndef tshow():\n    f=request.args(0,cast=int)\n    a=[]\n    b=[]\n    status=\'Expired\'\n    d=db(db.task.authoris==auth.user.email).select()\n    for i in range(len(d)):\n\t    b=[]\n\t    if d[i][\'done\']==True:\n\t    \tstatus=\'Done\'\n\t    else:\n\t\tif d[i][\'pending\'].date()<datetime.date.today():\n\t\t    status=\'Expired\'\n\t\telse :\n\t\t    status=\'Pending\'\n\t    b.append(d[i][\'tit\'])\n\t    b.append(status)\n\t    a.append(b)\n    if(f==1):\n    \td=sorted(d,key=lambda x: x[\'tit\'] )\n\ta=sorted(a,key=lambda x: x[0])\n    elif(f==2):\n    \td=sorted(d,key=lambda x: x[\'pending\'] ,reverse=True)\n\ta=sorted(a,key=lambda x: x[0])\n    elif(f==3):\n\ta=sorted(a,key=lambda x: x[1])\n\t[x for (y,x) in sorted(zip(d[1],a))]\n    response.flash ="Tasks Listing !"\n    return dict(d=d,a=a,x=\'\')\n@auth.requires_login()\ndef ndidtask():\n\ta=request.args(0,cast=str).replace(\'_\',\' \')\n\td=db((db.task.authoris==auth.user.email)&(db.task.tit==a)).update(done=False)\n\tredirect(URL(\'tshow\',args=1))\n\treturn()\n@auth.requires_login()\ndef searchtask():\n\tform=SQLFORM.factory(Field(\'stime\',\'date\',requires=IS_NOT_EMPTY(),label="Start Time"),\n\t\t\tField(\'endtime\',\'date\',label="End Time"))\n\tif form.process().accepted:\n\t\tst=form.vars.stime\n\t\tet=form.vars.endtime\n\t\tif et!=None:\n\t\t\tredirect(URL(\'taskdate2\',args=(form.vars.stime,form.vars.endtime)))\n\t\telse:\n\t\t\tredirect(URL(\'taskdate\',args=(form.vars.stime)))\n\treturn dict(form=form)\n@auth.requires_login()\ndef taskdate2():\n\ta=request.args(0,cast=str)\n\tb=request.args(1,cast=str)\n\tnam=[]\n\tname=db(db.task.authoris==auth.user.email).select()\n\tl=len(name)\n\tfor i in range(l):\n\t\tif str(name[i][\'pending\'].date())>=a and str(name[i][\'pending\'].date())<=b:\n\t\t\tnam.append(name[i])\n\treturn dict(nam=nam,a=a,b=b)\n\n@auth.requires_login()\ndef taskdate():\n\ta=request.args(0,cast=str)\n\tnam=[]\n\tname=db(db.task.authoris==auth.user.email).select()\n\tl=len(name)\n\tfor i in range(l):\n\t\tif str(name[i][\'pending\'].date())==a:\n\t\t\tnam.append(name[i])\n\treturn dict(nam=nam,a=a)\n#@auth.requires_login()\n#def makeacopy():\n#\ttit=request.args(0,cast=str).replace(\'_\',\' \')\n#\tusr=request.args(1,cast=str).replace(\'_\',\' \')\n#\tif session.msg==\'NO\':\n#\t\tresponse.flash=\'Invalid Title!\'\n#\t\tsession.msg=\'Yes\'\n#\ta=db(db.auth_user.id==auth.user.id).select()\n#\tif tit in a[0][\'notes\'].split(\'@\'):\n#\t\tsession.msg=\'NO\'\n#\t\tredirect(URL(\'prof\',args=(olda,oldb)))\n#\tb=a[0][\'notes\']+\'@\'+tit\n#\tc=tag.split(\',\')\n#\tdb(db.auth_user.id==auth.user.id).update(notes=b)\n#\tsession.title=tit\n#\tdb.note.insert(priority=pr,title=tit,cd=request.now,md=request.now,description=desc,val=val,tags=tag,authoris=auth.user.email)\n#\tfor i in range(len(c)):\t\n#\t \tdb.tags.insert(word=c[i],title=tit,authoris=auth.user.email)\t\n#\tredirect(URL(\'show\',args=tit))#make it with attachments alsi\n#\treturn dict(form=form)\n@auth.requires_login()\ndef ma1():\n\tb=request.args(0,cast=int)\n\ta=db(db.note.id==b).select()\n\tmail.send(to=auth.user.email,subject=a[0][\'title\'],message=\'Description : \'+str(a[0][\'description\'])+\'\\r\\n\'+\'Content : \'+str(a[0][\'val\'])+\'\\r\\n\'+\'Creation Date : \'+str(a[0][\'cd\'].date())+\'\\r\\n\'+\'Modification Date : \'+str(a[0][\'md\'].date())+\'\\r\\n\'+\'Author Is : \'+str(a[0][\'authoris\']))\n\tredirect(URL(\'prof\',args=(a[0][\'id\'],a[0][\'authoris\'])))\n\treturn dict()\n\n@auth.requires_login()\ndef ma():\n\ttitl=request.args(0,cast=str).strip()\n\ttitl=titl.replace(\'_\',\' \')\n\ta=db((db.note.authoris==auth.user.email)&(db.note.title==titl)).select()\n\tmail.send(to=auth.user.email,subject=titl,message=\'Description : \'+str(a[0][\'description\'])+\'\\r\\n\'+\'Content : \'+str(a[0][\'val\'])+\'\\r\\n\'+\'Creation Date : \'+str(a[0][\'cd\'].date())+\'\\r\\n\'+\'Modification Date : \'+str(a[0][\'md\'].date())+\'\\r\\n\'+\'Author Is : \'+str(auth.user.email))\n\tredirect(URL(\'show\',args=titl))\n\treturn dict()\n@auth.requires_login()\ndef noti():\n    \td=db(db.friends.tom==auth.user.email).select()\n\tdb(db.auth_user.email==auth.user.email).update(Notifications=0)\n\ta=[]    \n\tfor i in range(len(d)):\n\t\tb=db(db.auth_user.email==d[i][\'frm\']).select()\n\t\ta.append(b[0])\n\treturn dict(d=d,a=a)\n@auth.requires_login()\ndef reqdel():\n\ta=request.args(0,cast=str)\n\ta=a.replace(\'_\',\' \')\n\tdb((db.friends.frm==auth.user.email)&(db.friends.tom==a)).delete()\n\tredirect(URL(\'sfriends\'))\n\treturn\n\n#a=db((db.note.title==title)& (auth.user.email==db.note.authoris[1:])).select()\n\nresponse._vars=response._caller(user)\n'
p7
sS'snapshot'
p8
(dp9
S'exception'
p10
(dp11
S'__hash__'
p12
S"<method-wrapper '__hash__' of exceptions.Exception object>"
p13
sS'__setattr__'
p14
S"<method-wrapper '__setattr__' of exceptions.Exception object>"
p15
sS'__reduce_ex__'
p16
S'<built-in method __reduce_ex__ of exceptions.Exception object>'
p17
sS'__getslice__'
p18
S"<method-wrapper '__getslice__' of exceptions.Exception object>"
p19
sS'__getitem__'
p20
S"<method-wrapper '__getitem__' of exceptions.Exception object>"
p21
sS'__setstate__'
p22
S'<built-in method __setstate__ of exceptions.Exception object>'
p23
sS'__reduce__'
p24
S'<built-in method __reduce__ of exceptions.Exception object>'
p25
sS'__str__'
p26
S"<method-wrapper '__str__' of exceptions.Exception object>"
p27
sS'__format__'
p28
S'<built-in method __format__ of exceptions.Exception object>'
p29
sS'__getattribute__'
p30
S"<method-wrapper '__getattribute__' of exceptions.Exception object>"
p31
sS'__class__'
p32
S"<type 'exceptions.Exception'>"
p33
sS'__unicode__'
p34
S'<built-in method __unicode__ of exceptions.Exception object>'
p35
sS'__delattr__'
p36
S"<method-wrapper '__delattr__' of exceptions.Exception object>"
p37
sS'__subclasshook__'
p38
S'<built-in method __subclasshook__ of type object>'
p39
sS'__repr__'
p40
S"<method-wrapper '__repr__' of exceptions.Exception object>"
p41
sS'args'
p42
S"('Server address not specified',)"
p43
sS'__dict__'
p44
S'{}'
p45
sS'__sizeof__'
p46
S'<built-in method __sizeof__ of exceptions.Exception object>'
p47
sS'__doc__'
p48
S"'Common base class for all non-exit exceptions.'"
p49
sS'__init__'
p50
S"<method-wrapper '__init__' of exceptions.Exception object>"
p51
sS'__new__'
p52
S'<built-in method __new__ of type object>'
p53
ssS'evalue'
p54
S'Server address not specified'
p55
sS'request'
p56
cgluon.html
XML_unpickle
p57
(S's\xefd\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">ajax</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">application</td><td valign="top">:</td><td><div>asd</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">args</td><td valign="top">:</td><td><div><table><tr><td><div>register</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">body</td><td valign="top">:</td><td><div>&lt;open file &#x27;&lt;fdopen&gt;&#x27;, mode &#x27;w+b&#x27; at 0xacd0fb78&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cid</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">client</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">controller</td><td valign="top">:</td><td><div>default</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cookies</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">session_id_admin</td><td valign="top">:</td><td><div>127.0.0.1-af4564cd-225f-46e0-a464-9002f882201d<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_asd</td><td valign="top">:</td><td><div>127.0.0.1-5b3764de-03fc-4b12-9e26-ed547781c419<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_welcome</td><td valign="top">:</td><td><div>127.0.0.1-4fb8fc0e-f4e8-4585-a946-58997545f65e<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">env</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">app_folders</td><td valign="top">:</td><td><div>set([&#x27;/home/samfisher/iiith/Semester 2/web2py/applications/admin/&#x27;, &#x27;/home/samfisher/iiith/Semester 2/web2py/applications/asd/&#x27;, &#x27;/home/samfisher/iiith/Semester 2/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">applications_parent</td><td valign="top">:</td><td><div>/home/samfisher/iiith/Semester 2/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cmd_args</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cmd_options</td><td valign="top">:</td><td><div>&lt;Values at 0x8c42bcc: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;samfisher-Inspiron-7520&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/samfisher/iiith/Semester 2/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;import_models&#x27;: False, &#x27;winservice&#x27;: &#x27;&#x27;, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;profiler_filename&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;interfaces&#x27;: None, &#x27;minthreads&#x27;: None, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">content_length</td><td valign="top">:</td><td><div>1061</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">content_type</td><td valign="top">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundarymjBb3leLrG81wRGc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">db_sessions</td><td valign="top">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">debugging</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">gluon_parent</td><td valign="top">:</td><td><div>/home/samfisher/iiith/Semester 2/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept</td><td valign="top">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept_charset</td><td valign="top">:</td><td><div>ISO-8859-1,utf-8;q=0.7,*;q=0.3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept_encoding</td><td valign="top">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_accept_language</td><td valign="top">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_cache_control</td><td valign="top">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_connection</td><td valign="top">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_content_length</td><td valign="top">:</td><td><div>1061</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_content_type</td><td valign="top">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundarymjBb3leLrG81wRGc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_cookie</td><td valign="top">:</td><td><div>session_id_welcome=127.0.0.1-4fb8fc0e-f4e8-4585-a946-58997545f65e; session_id_admin=127.0.0.1-af4564cd-225f-46e0-a464-9002f882201d; session_id_asd=127.0.0.1-5b3764de-03fc-4b12-9e26-ed547781c419</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_host</td><td valign="top">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_origin</td><td valign="top">:</td><td><div>http://127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_referer</td><td valign="top">:</td><td><div>http://127.0.0.1:8000/asd/default/user/register?_next=%2Fasd%2Fdefault%2Findex</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">http_user_agent</td><td valign="top">:</td><td><div>Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_jython</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_pypy</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">local_hosts</td><td valign="top">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>samfisher-Inspiron-7520</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path_info</td><td valign="top">:</td><td><div>/asd/default/user/register</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">query_string</td><td valign="top">:</td><td><div>_next=%2Fasd%2Fdefault%2Findex</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remote_addr</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">remote_port</td><td valign="top">:</td><td><div>41245</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">request_method</td><td valign="top">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">request_uri</td><td valign="top">:</td><td><div>/asd/default/user/register?_next=%2Fasd%2Fdefault%2Findex</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">script_name</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_name</td><td valign="top">:</td><td><div>samfisher-Inspiron-7520</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_port</td><td valign="top">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_protocol</td><td valign="top">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">server_software</td><td valign="top">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_path</td><td valign="top">:</td><td><div>/home/samfisher/iiith/Semester 2/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_version</td><td valign="top">:</td><td><div><table><tr><td><div>2</div></td></tr><tr><td><div>4</div></td></tr><tr><td><div>2</div></td></tr><tr><td><div>stable</div></td></tr><tr><td><div>datetime.datetime(2013, 3, 4, 3, 26, 21)</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_errors</td><td valign="top">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0xb72b50d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_file_wrapper</td><td valign="top">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x8be8f2c&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_input</td><td valign="top">:</td><td><div>&lt;socket._fileobject object at 0x8f1506c&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_multiprocess</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_multithread</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_run_once</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_url_scheme</td><td valign="top">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi_version</td><td valign="top">:</td><td><div><table><tr><td><div>1</div></td></tr><tr><td><div>0</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">extension</td><td valign="top">:</td><td><div>html</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">folder</td><td valign="top">:</td><td><div>/home/samfisher/iiith/Semester 2/web2py/applications/asd/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">function</td><td valign="top">:</td><td><div>user</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">get_vars</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">global_settings</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">app_folders</td><td valign="top">:</td><td><div>set([&#x27;/home/samfisher/iiith/Semester 2/web2py/applications/admin/&#x27;, &#x27;/home/samfisher/iiith/Semester 2/web2py/applications/asd/&#x27;, &#x27;/home/samfisher/iiith/Semester 2/web2py/applications/welcome/&#x27;])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">applications_parent</td><td valign="top">:</td><td><div>/home/samfisher/iiith/Semester 2/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cmd_args</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cmd_options</td><td valign="top">:</td><td><div>&lt;Values at 0x8c42bcc: {&#x27;verbose&#x27;: False, &#x27;ip&#x27;: &#x27;127.0.0.1&#x27;, &#x27;with_scheduler&#x27;: False, &#x27;ips&#x27;: [], &#x27;shutdown_timeout&#x27;: 5, &#x27;taskbar&#x27;: False, &#x27;port&#x27;: 8000, &#x27;maxthreads&#x27;: None, &#x27;softcron&#x27;: False, &#x27;server_name&#x27;: &#x27;samfisher-Inspiron-7520&#x27;, &#x27;bpython&#x27;: False, &#x27;nogui&#x27;: False, &#x27;pid_filename&#x27;: &#x27;httpserver.pid&#x27;, &#x27;extcron&#x27;: False, &#x27;runcron&#x27;: False, &#x27;run_system_tests&#x27;: False, &#x27;test&#x27;: None, &#x27;folder&#x27;: &#x27;/home/samfisher/iiith/Semester 2/web2py&#x27;, &#x27;config&#x27;: &#x27;&#x27;, &#x27;import_models&#x27;: False, &#x27;winservice&#x27;: &#x27;&#x27;, &#x27;shell&#x27;: None, &#x27;run&#x27;: &#x27;&#x27;, &#x27;log_filename&#x27;: &#x27;httpserver.log&#x27;, &#x27;debuglevel&#x27;: 30, &#x27;args&#x27;: [&#x27;&#x27;], &#x27;socket_timeout&#x27;: 5, &#x27;ssl_ca_certificate&#x27;: None, &#x27;scheduler&#x27;: None, &#x27;profiler_filename&#x27;: None, &#x27;ssl_private_key&#x27;: &#x27;&#x27;, &#x27;scheduler_groups&#x27;: None, &#x27;password&#x27;: &#x27;&lt;ask&gt;&#x27;, &#x27;request_queue_size&#x27;: 5, &#x27;ssl_certificate&#x27;: &#x27;&#x27;, &#x27;cronjob&#x27;: False, &#x27;numthreads&#x27;: None, &#x27;quiet&#x27;: False, &#x27;interfaces&#x27;: None, &#x27;minthreads&#x27;: None, &#x27;timeout&#x27;: 10, &#x27;plain&#x27;: False, &#x27;nobanner&#x27;: False}&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">db_sessions</td><td valign="top">:</td><td><div>set([])</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">debugging</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">gluon_parent</td><td valign="top">:</td><td><div>/home/samfisher/iiith/Semester 2/web2py</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_jython</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_pypy</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">local_hosts</td><td valign="top">:</td><td><div><table><tr><td><div>::1</div></td></tr><tr><td><div>127.0.1.1</div></td></tr><tr><td><div>::ffff:127.0.0.1</div></td></tr><tr><td><div>127.0.0.1</div></td></tr><tr><td><div>samfisher-Inspiron-7520</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">web2py_version</td><td valign="top">:</td><td><div><table><tr><td><div>2</div></td></tr><tr><td><div>4</div></td></tr><tr><td><div>2</div></td></tr><tr><td><div>stable</div></td></tr><tr><td><div>datetime.datetime(2013, 3, 4, 3, 26, 21)</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_https</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_local</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">is_restful</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">now</td><td valign="top">:</td><td><div>datetime.datetime(2013, 4, 19, 15, 19, 35, 314495)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">post_vars</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">email</td><td valign="top">:</td><td><div>aniruddh.kanojia.iiith@facebook.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">first_name</td><td valign="top">:</td><td><div>Sam</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">last_name</td><td valign="top">:</td><td><div>Fisher</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">password</td><td valign="top">:</td><td><div>ass</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">password_two</td><td valign="top">:</td><td><div>ass</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">pic</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">raw_args</td><td valign="top">:</td><td><div>register</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">raw_extension</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">url</td><td valign="top">:</td><td><div>/asd/default/user/register</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">utcnow</td><td valign="top">:</td><td><div>datetime.datetime(2013, 4, 19, 9, 49, 35, 314513)</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">uuid</td><td valign="top">:</td><td><div>asd/127.0.0.1.2013-04-19.15-19-35.aaa7314a-73ec-457c-adee-8d1b28ef4a24</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">vars</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">email</td><td valign="top">:</td><td><div>aniruddh.kanojia.iiith@facebook.com</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">first_name</td><td valign="top">:</td><td><div>Sam</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">last_name</td><td valign="top">:</td><td><div>Fisher</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">password</td><td valign="top">:</td><td><div>ass</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">password_two</td><td valign="top">:</td><td><div>ass</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">pic</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">environ</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">CONTENT_LENGTH</td><td valign="top">:</td><td><div>1061</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">CONTENT_TYPE</td><td valign="top">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundarymjBb3leLrG81wRGc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT</td><td valign="top">:</td><td><div>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT_CHARSET</td><td valign="top">:</td><td><div>ISO-8859-1,utf-8;q=0.7,*;q=0.3</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT_ENCODING</td><td valign="top">:</td><td><div>gzip,deflate,sdch</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ACCEPT_LANGUAGE</td><td valign="top">:</td><td><div>en-US,en;q=0.8</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_CACHE_CONTROL</td><td valign="top">:</td><td><div>max-age=0</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_CONNECTION</td><td valign="top">:</td><td><div>keep-alive</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_CONTENT_LENGTH</td><td valign="top">:</td><td><div>1061</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_CONTENT_TYPE</td><td valign="top">:</td><td><div>multipart/form-data; boundary=----WebKitFormBoundarymjBb3leLrG81wRGc</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_COOKIE</td><td valign="top">:</td><td><div>session_id_welcome=127.0.0.1-4fb8fc0e-f4e8-4585-a946-58997545f65e; session_id_admin=127.0.0.1-af4564cd-225f-46e0-a464-9002f882201d; session_id_asd=127.0.0.1-5b3764de-03fc-4b12-9e26-ed547781c419</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_HOST</td><td valign="top">:</td><td><div>127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_ORIGIN</td><td valign="top">:</td><td><div>http://127.0.0.1:8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_REFERER</td><td valign="top">:</td><td><div>http://127.0.0.1:8000/asd/default/user/register?_next=%2Fasd%2Fdefault%2Findex</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">HTTP_USER_AGENT</td><td valign="top">:</td><td><div>Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">PATH_INFO</td><td valign="top">:</td><td><div>/asd/default/user/register</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">QUERY_STRING</td><td valign="top">:</td><td><div>_next=%2Fasd%2Fdefault%2Findex</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REMOTE_ADDR</td><td valign="top">:</td><td><div>127.0.0.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REMOTE_PORT</td><td valign="top">:</td><td><div>41245</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REQUEST_METHOD</td><td valign="top">:</td><td><div>POST</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">REQUEST_URI</td><td valign="top">:</td><td><div>/asd/default/user/register?_next=%2Fasd%2Fdefault%2Findex</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SCRIPT_NAME</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_NAME</td><td valign="top">:</td><td><div>samfisher-Inspiron-7520</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_PORT</td><td valign="top">:</td><td><div>8000</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_PROTOCOL</td><td valign="top">:</td><td><div>HTTP/1.1</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">SERVER_SOFTWARE</td><td valign="top">:</td><td><div>Rocket 1.2.6</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.errors</td><td valign="top">:</td><td><div>&lt;open file &#x27;&lt;stderr&gt;&#x27;, mode &#x27;w&#x27; at 0xb72b50d0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.file_wrapper</td><td valign="top">:</td><td><div>&lt;class wsgiref.util.FileWrapper at 0x8be8f2c&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.input</td><td valign="top">:</td><td><div>&lt;open file &#x27;&lt;fdopen&gt;&#x27;, mode &#x27;w+b&#x27; at 0xacd0fb78&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.multiprocess</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.multithread</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.run_once</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.url_scheme</td><td valign="top">:</td><td><div>http</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">wsgi.version</td><td valign="top">:</td><td><div>1</div></td></tr></table></div></td></tr></table></div></td></tr></table></div>'
tRp58
sS'frames'
p59
(lp60
(dp61
S'file'
p62
S'/home/samfisher/iiith/Semester 2/web2py/gluon/restricted.py'
p63
sS'dump'
p64
(dp65
S'environment'
p66
S"{'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}"
p67
sS'ccode'
p68
S'<code object <module> at 0xace42b60, file "/home...applications/asd/controllers/default.py", line 2>'
p69
ssS'lnum'
p70
I212
sS'lines'
p71
(dp72
I207
S'    try:'
p73
sI208
S'        if isinstance(code, types.CodeType):'
p74
sI209
S'            ccode = code'
p75
sI210
S'        else:'
p76
sI211
S'            ccode = compile2(code, layer)'
p77
sI212
S'        exec ccode in environment'
p78
sI213
S'    except HTTP:'
p79
sI214
S'        raise'
p80
sI215
S'    except RestrictedError:'
p81
sI216
S'        # do not encapsulate (obfuscate) the original RestrictedError'
p82
ssS'call'
p83
S"(code='#text editor(if possible)\\nimport datetime\\nimport....select()\\n\\nresponse._vars=response._caller(user)\\n', environment={'A': <class 'gluon.html.A'>, 'Auth': <class 'gluon.tools.Auth'>, 'B': <class 'gluon.html.B'>, 'BEAUTIFY': <class 'gluon.html.BEAUTIFY'>, 'BODY': <class 'gluon.html.BODY'>, 'BR': <class 'gluon.html.BR'>, 'BUTTON': <class 'gluon.html.BUTTON'>, 'CAT': <class 'gluon.html.CAT'>, 'CENTER': <class 'gluon.html.CENTER'>, 'CLEANUP': <class 'gluon.validators.CLEANUP'>, ...}, layer='/home/samfisher/iiith/Semester 2/web2py/applications/asd/controllers/default.py')"
p84
sS'func'
p85
S'restricted'
p86
sa(dp87
g62
S'/home/samfisher/iiith/Semester 2/web2py/applications/asd/controllers/default.py'
p88
sg64
(dp89
sg70
I936
sg71
(dp90
I928
S'\ta=request.args(0,cast=str)'
p91
sI929
S"\ta=a.replace('_',' ')"
p92
sI930
S'\tdb((db.friends.frm==auth.user.email)&(db.friends.tom==a)).delete()'
p93
sI931
S"\tredirect(URL('sfriends'))"
p94
sI932
S'\treturn'
p95
sI933
S''
sI934
S'#a=db((db.note.title==title)& (auth.user.email==db.note.authoris[1:])).select()'
p96
sI925
S'\treturn dict(d=d,a=a)'
p97
sI926
S'@auth.requires_login()'
p98
sI927
S'def reqdel():'
p99
ssg83
S'()'
p100
sg85
S'<module>'
p101
sa(dp102
g62
S'/home/samfisher/iiith/Semester 2/web2py/gluon/globals.py'
p103
sg64
(dp104
S'self'
p105
S'undefined'
p106
sS'f'
S'<function user>'
p107
ssg70
I193
sg71
(dp108
I192
S'        self._vars = None'
p109
sI193
S'        self._caller = lambda f: f()'
p110
sI194
S'        self._view_environment = None'
p111
sI195
S'        self._custom_commit = None'
p112
sI196
S'        self._custom_rollback = None'
p113
sI197
S''
sI188
S'        self.menu = []             # used by the default view layout'
p114
sI189
S'        self.files = []            # used by web2py_ajax.html'
p115
sI190
S'        self.generic_patterns = []  # patterns to allow generic views'
p116
sI191
S"        self.delimiters = ('{{', '}}')"
p117
ssg83
S'(f=<function user>)'
p118
sg85
S'<lambda>'
p119
sa(dp120
g62
S'/home/samfisher/iiith/Semester 2/web2py/applications/asd/controllers/default.py'
p121
sg64
(dp122
S'global auth'
p123
S'<gluon.tools.Auth object>'
p124
sS'form'
p125
g106
sS'builtindict'
p126
S"<type 'dict'>"
p127
ssg70
I81
sg71
(dp128
I76
S'    use @auth.requires_login()'
p129
sI77
S"        @auth.requires_membership('group name')"
p130
sI78
S"        @auth.requires_permission('read','table name',record_id)"
p131
sI79
S'    to decorate functions that need access control'
p132
sI80
S'    """'
p133
sI81
S'    return dict(form=auth())'
p134
sI82
S''
sI83
S''
sI84
S'def download():'
p135
sI85
S'    """'
p136
ssg83
S'()'
p137
sg85
S'user'
p138
sa(dp139
g62
S'/home/samfisher/iiith/Semester 2/web2py/gluon/tools.py'
p140
sg64
(dp141
S'self'
p142
S'<gluon.tools.Auth object>'
p143
sS'args'
p144
S"['register']"
p145
sS'builtingetattr'
p146
S'<built-in function getattr>'
p147
ssg70
I1242
sg71
(dp148
I1237
S"                       'change_password', 'profile', 'groups',"
p149
sI1238
S"                       'impersonate', 'not_authorized'):"
p150
sI1239
S"            if len(request.args) >= 2 and args[0] == 'impersonate':"
p151
sI1240
S'                return getattr(self, args[0])(request.args[1])'
p152
sI1241
S'            else:'
p153
sI1242
S'                return getattr(self, args[0])()'
p154
sI1243
S"        elif args[0] == 'cas' and not self.settings.cas_provider:"
p155
sI1244
S"            if args(1) == self.settings.cas_actions['login']:"
p156
sI1245
S'                return self.cas_login(version=2)'
p157
sI1246
S"            elif args(1) == self.settings.cas_actions['validate']:"
p158
ssg83
S'(self=<gluon.tools.Auth object>)'
p159
sg85
S'__call__'
p160
sa(dp161
g62
S'/home/samfisher/iiith/Semester 2/web2py/gluon/tools.py'
p162
sg64
(dp163
S'link'
p164
S"'http://127.0.0.1:8000/asd/default/user/verify_email/5da58046-76d3-45b5-8355-4573e42e952c'"
p165
sS'key'
p166
S"'5da58046-76d3-45b5-8355-4573e42e952c'"
p167
sS'builtindict'
p168
S"<type 'dict'>"
p169
ssg70
I2281
sg71
(dp170
I2276
S'                if not self.settings.mailer or \\'
p171
sI2277
S'                   not self.settings.mailer.send('
p172
sI2278
S'                    to=form.vars.email,'
p173
sI2279
S'                    subject=self.messages.verify_email_subject,'
p174
sI2280
S'                    message=self.messages.verify_email'
p175
sI2281
S'                        % dict(key=key, link=link)):'
p176
sI2282
S'                    self.db.rollback()'
p177
sI2283
S'                    response.flash = self.messages.unable_send_email'
p178
sI2284
S'                    return form'
p179
sI2285
S'                session.flash = self.messages.email_sent'
p180
ssg83
S"(self=<gluon.tools.Auth object>, next='/asd/default/index', onvalidation=[], onaccept=[], log='User %(id)s Registered')"
p181
sg85
S'register'
p182
sa(dp183
g62
S'/home/samfisher/iiith/Semester 2/web2py/gluon/tools.py'
p184
sg64
(dp185
S'builtinException'
p186
S"<type 'exceptions.Exception'>"
p187
ssg70
I366
sg71
(dp188
I361
S'            return text'
p189
sI362
S''
sI363
S'        sender = sender or self.settings.sender'
p190
sI364
S''
sI365
S'        if not isinstance(self.settings.server, str):'
p191
sI366
S"            raise Exception('Server address not specified')"
p192
sI367
S'        if not isinstance(sender, str):'
p193
sI368
S"            raise Exception('Sender address not specified')"
p194
sI369
S''
sI370
S'        if not raw:'
p195
ssg83
S"(self=<gluon.tools.Mail object>, to='aniruddh.kanojia.iiith@facebook.com', subject='Email verification', message='Click on the link http://127.0.0.1:8000/asd/defa...-76d3-45b5-8355-4573e42e952c to verify your email', attachments=None, cc=None, bcc=None, reply_to=None, sender=None, encoding='utf-8', raw=False, headers={})"
p196
sg85
S'send'
p197
sasS'pyver'
p198
S'Python 2.7.3: /usr/bin/python (prefix: /usr)'
p199
sS'session'
p200
g57
(S's\x88\x01\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">flash</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">last_orderby</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">last_query</td><td valign="top">:</td><td><div>db.auth_user.id&gt;0</div></td></tr></table></div>'
tRp201
sS'etype'
p202
S"<type 'exceptions.Exception'>"
p203
sS'date'
p204
S'Fri Apr 19 15:19:35 2013'
p205
sS'response'
p206
g57
(S's\x04\x16\x00\x00<div><table><tr><td style="font-weight:bold;vertical-align:top">body</td><td valign="top">:</td><td><div>&lt;cStringIO.StringO object at 0xaca6aae0&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">cookies</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">session_id_asd</td><td valign="top">:</td><td><div>127.0.0.1-5b3764de-03fc-4b12-9e26-ed547781c419<table><tr><td style="font-weight:bold;vertical-align:top">comment</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">domain</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">expires</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">httponly</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">max-age</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">path</td><td valign="top">:</td><td><div>/</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">secure</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">version</td><td valign="top">:</td><td><div></div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">delimiters</td><td valign="top">:</td><td><div><table><tr><td><div>{{</div></td></tr><tr><td><div>}}</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">files</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">flash</td><td valign="top">:</td><td><div></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">generic_patterns</td><td valign="top">:</td><td><div><table><tr><td><div>*</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">google_analytics_id</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">headers</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">X-Powered-By</td><td valign="top">:</td><td><div>web2py</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">logo</td><td valign="top">:</td><td><div><a class="brand" href="/asd/default/index"><span style="color:blue">Home</span></a></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">menu</td><td valign="top">:</td><td><div><table><tr><td><div><table><tr><td><div><span style="color:yellow">Help</span></div></td></tr><tr><td><div>False</div></td></tr><tr><td><div>/asd/default/help</div></td></tr></table></div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">meta</td><td valign="top">:</td><td><div><table><tr><td style="font-weight:bold;vertical-align:top">author</td><td valign="top">:</td><td><div>Your Name &lt;you@example.com&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">description</td><td valign="top">:</td><td><div>a cool new app</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">generator</td><td valign="top">:</td><td><div>Web2py Web Framework</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">keywords</td><td valign="top">:</td><td><div>web2py, python, framework</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">models_to_run</td><td valign="top">:</td><td><div><table><tr><td><div>^\\w+\\.py$</div></td></tr><tr><td><div>^default/\\w+\\.py$</div></td></tr><tr><td><div>^default/user/\\w+\\.py$</div></td></tr></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">postprocessing</td><td valign="top">:</td><td><div><table></table></div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_cookie_expires</td><td valign="top">:</td><td><div>None</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_data_name</td><td valign="top">:</td><td><div>session_data_asd</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_file</td><td valign="top">:</td><td><div>&lt;open file &#x27;/home/samfisher/iiith/Semester 2/web2py/applications/asd/sessions/127.0.0.1-5b3764de-03fc-4b12-9e26-ed547781c419&#x27;, mode &#x27;rb+&#x27; at 0xacd22ee8&gt;</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_filename</td><td valign="top">:</td><td><div>/home/samfisher/iiith/Semester 2/web2py/applications/asd/sessions/127.0.0.1-5b3764de-03fc-4b12-9e26-ed547781c419</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id</td><td valign="top">:</td><td><div>127.0.0.1-5b3764de-03fc-4b12-9e26-ed547781c419</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_id_name</td><td valign="top">:</td><td><div>session_id_asd</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_locked</td><td valign="top">:</td><td><div>True</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_new</td><td valign="top">:</td><td><div>False</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">session_storage_type</td><td valign="top">:</td><td><div>file</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">status</td><td valign="top">:</td><td><div>200</div></td></tr><tr><td style="font-weight:bold;vertical-align:top">view</td><td valign="top">:</td><td><div>default/user.html</div></td></tr></table></div>'
tRp207
sS'locals'
p208
(dp209
S'raw'
p210
S'False'
p211
sS'sender'
p212
S'None'
p213
sS'encoding'
p214
S"'utf-8'"
p215
sS'cc'
p216
S'None'
p217
sS'self'
p218
S'<gluon.tools.Mail object>'
p219
sS'bcc'
p220
S'None'
p221
sS'attachments'
p222
S'None'
p223
sS'headers'
p224
g45
sS'encoded_or_raw'
p225
S'<function encoded_or_raw>'
p226
sS'reply_to'
p227
S'None'
p228
sS'message'
p229
S"'Click on the link http://127.0.0.1:8000/asd/defa...-76d3-45b5-8355-4573e42e952c to verify your email'"
p230
sS'subject'
p231
S"'Email verification'"
p232
sS'to'
p233
S"'aniruddh.kanojia.iiith@facebook.com'"
p234
sS'encode_header'
p235
S'<function encode_header>'
p236
sssS'traceback'
p237
S'Traceback (most recent call last):\n  File "/home/samfisher/iiith/Semester 2/web2py/gluon/restricted.py", line 212, in restricted\n    exec ccode in environment\n  File "/home/samfisher/iiith/Semester 2/web2py/applications/asd/controllers/default.py", line 936, in <module>\n  File "/home/samfisher/iiith/Semester 2/web2py/gluon/globals.py", line 193, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/samfisher/iiith/Semester 2/web2py/applications/asd/controllers/default.py", line 81, in user\n    return dict(form=auth())\n  File "/home/samfisher/iiith/Semester 2/web2py/gluon/tools.py", line 1242, in __call__\n    return getattr(self, args[0])()\n  File "/home/samfisher/iiith/Semester 2/web2py/gluon/tools.py", line 2281, in register\n    % dict(key=key, link=link)):\n  File "/home/samfisher/iiith/Semester 2/web2py/gluon/tools.py", line 366, in send\n    raise Exception(\'Server address not specified\')\nException: Server address not specified\n'
p238
s.